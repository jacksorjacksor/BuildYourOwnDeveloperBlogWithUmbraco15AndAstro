---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import type {
  ApiBlockListModelItemsItem,
  ImageComponentElementModel,
} from '../../umbraco-client/model';

// NOTE: This is an experimental implementation

interface Props {
  block: ApiBlockListModelItemsItem;
}

// Pull in the block data from Astro
const { block } = Astro.props;
const content = block.content as ImageComponentElementModel;

// Grab every image file under /src/assets/media into a map
// Experimental: If this wasn't statically generated we may be concerned about the performance of this
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/media/**/*.{jpg,png,webp}',
  { eager: true }
);

// Extract the relative URL from our CMS data
const imageRelPath = content.properties?.image?.[0]?.url;

// Build the matching key for our map
const key = `/src/assets${imageRelPath}`;

// Fetch the actual image metadata so Astro can make responsive sizes
const image = images[key]?.default;
---

{
  image && (
    <div class="py-10 overflow-hidden rounded">
      {/* Astro will auto-optimise and give us srcsets */}
      <Image src={image} layout="full-width" alt={content.properties?.image?.[0]?.name || ''} />
    </div>
  )
}
