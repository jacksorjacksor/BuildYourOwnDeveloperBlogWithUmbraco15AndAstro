---
// Reference: https://docs.astro.build/en/guides/content-collections/#building-for-static-output-default

import Layout from '../../layouts/Layout.astro';
import { render } from 'astro:content';
import { getCollection } from 'astro:content';
import ExerciseNavButton from '../../components/ExerciseNavButton.astro'

import { getPreviousExercise, getNextExercise } from '../../helpers/ExerciseHelper';

export async function getStaticPaths() {
  const exercises = await getCollection('workshopExercise');
  return exercises.map((exercise) => ({
    params: { slug: exercise.id },
    props: { exercise, allExercises: exercises },
  }));
}

const { exercise, allExercises  } = Astro.props;
const { Content } = await render(exercise);

var currentPageIndex = exercise.data.sortOrder;

const previousExercise = getPreviousExercise(allExercises, currentPageIndex);
const nextExercise = getNextExercise(allExercises, currentPageIndex);

const previousExerciseText = "‚Üê Previous Exercise"
const nextExerciseText = "‚Üí Next Exercise"
---

<Layout>
  <section class="mx-auto py-[40px] lg:py-[70px] px-8">
    <div class="mx-auto max-w-7xl flex justify-end md:px-8 pb-8">
      <a
        class="border-indigo-600 border rounded-md inline-flex items-center justify-center py-3 px-7 text-center text-base font-medium text-indigo-600"
        href="/exercises"
      >
        Back to Exercise List
      </a>
    </div>
    <div class="mx-auto prose lg:prose-xl">
      <h1 class="mb-2 text-lg font-semibold">{exercise.data.title}</h1>

      {exercise.data.branchInfo ? (
        <p class="text-sm text-gray-500">
          üåø <a href={exercise.data.branchInfo.url} target="_blank">{exercise.data.branchInfo.name}</a>
        </p>
      ) : null}

      <Content />

      <!-- Exercise Nav Boxes -->
      <div class="pt-8">
        {previousExercise ? 
          <ExerciseNavButton
            exerciseId={previousExercise.id} 
            directionText={previousExerciseText} 
            exerciseTitle={previousExercise.data.title}
            floatEnd={false} /> 
          : null
        }

        {nextExercise ? 
          <ExerciseNavButton
            exerciseId={nextExercise.id}
            directionText={nextExerciseText}
            exerciseTitle={nextExercise.data.title}
            floatEnd={true} />
          : null
          }
      </div>

    
    <div class="mx-auto max-w-7xl md:px-8 pt-12 flex justify-end">
      <a
        class="border-indigo-600 border rounded-md inline-flex items-center justify-center py-3 px-7 text-center text-base font-medium text-indigo-600"
        href="/exercises"
      >
        Back to Exercise List
      </a>
    </div>
  </section>
</Layout>
